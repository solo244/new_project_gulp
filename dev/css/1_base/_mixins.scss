/**
 * Input placeholder
 */

 @mixin placeholder($color) {
	&::-webkit-input-placeholder {
		color: $color;
	}
	&:-moz-placeholder {
		color: $color;
	}
	&::-moz-placeholder {
		color: $color;
	}
	&:-ms-input-placeholder {
		color: $color;
	}
}

/**
 * Clearfix (uses before and after) -> when HTML is not an option
 */

@mixin clearfix() {
	&::before,
	&::after {
		content: "";
		display: table;
	}
	&::after {
		clear: both;
	}
}

/**
 * Grayscale
 */

@mixin grayscale() {
	filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale"); /* Firefox 10+, Firefox on Android */
	filter: gray; /* IE6-9 */
	-webkit-filter: grayscale(100%); /* Chrome 19+, Safari 6+, Safari 6+ iOS */
}

@mixin grayscale_disable() {
	filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale");
	-webkit-filter: grayscale(0%);
}

/**
 * Flex center
 */

@mixin flex-($pos) {
	display: flex;
	align-items: $pos;
	justify-content: $pos;
}

/**
 * Reset coords to 0 when positioning
 */

@mixin coords($reset) {
	top: $reset;
	left: $reset;
	right: $reset;
	bottom: $reset;
}

/**
 * Error states
 */

@mixin error() {
	background-color: error(-2);
	color: error(0);
	border-radius: $corners;
	padding: $spacer;
	font-size: font-size(0);
	text-transform: $text-none;
	position: absolute;
	bottom: 140%;
	left: 0;
	display: none;
}

@mixin error-holder($color) {
	border: 5px dashed $color;
	position: relative;

	&:hover { &::after { display: block; }}
}